{"ast":null,"code":"import _classCallCheck from \"/Users/baam/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baam/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/baam/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/baam/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/baam/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/baam/eth_swap/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/baam/eth_swap/src/components/UserList.js\";\nimport React, { Component } from 'react';\nimport User from './User';\nimport ContactCreate from './ContactCreate';\nimport update from 'react-addons-update';\n\nvar UserList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserList, _Component);\n\n  function UserList(props) {\n    var _this;\n\n    _classCallCheck(this, UserList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserList).call(this, props));\n    _this.state = {\n      selectedKey: -1,\n      contactData: [{\n        name: \"0xB08452f93E63c44dCbE25Af479ae8fe42c716F98\",\n        amount: ''\n      }]\n    };\n    _this.handleCreate = _this.handleCreate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRemove = _this.handleRemove.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var contactData = localStorage.contactData;\n\n      if (contactData) {\n        this.setState({\n          contactData: JSON.parse(contactData)\n        });\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevState) {\n      if (JSON.stringify(prevState.contactData) != JSON.stringify(this.state.contactData)) {\n        localStorage.contactData = JSON.stringify(this.state.contactData); //update된 거 지우고 싶으면 console창에서 localStorage.clear() \n      }\n    }\n  }, {\n    key: \"handleCreate\",\n    value: function handleCreate(contact) {\n      this.setState({\n        contactData: update(this.state.contactData, {\n          $push: [contact]\n        })\n      });\n    }\n  }, {\n    key: \"handleRemove\",\n    value: function handleRemove() {\n      this.setState({\n        contactData: update(this.state.contactData, {\n          $splice: [[this.state.selectedKey, 1]]\n        }),\n        selectedKey: -1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mapToComponents = function mapToComponents(data) {\n        return data.map(function (contact, i) {\n          return React.createElement(User, {\n            contact: contact,\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          });\n        });\n      };\n\n      return React.createElement(\"div\", {\n        className: \"card mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"float-left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"User\"))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, mapToComponents(this.state.contactData)), React.createElement(ContactCreate, {\n        onCreate: this.handleCreate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"df\")));\n    }\n  }]);\n\n  return UserList;\n}(Component);\n\nexport default UserList;","map":{"version":3,"sources":["/Users/baam/eth_swap/src/components/UserList.js"],"names":["React","Component","User","ContactCreate","update","UserList","props","state","selectedKey","contactData","name","amount","handleCreate","bind","handleRemove","localStorage","setState","JSON","parse","prevState","stringify","contact","$push","$splice","mapToComponents","data","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport User from './User'\nimport ContactCreate from './ContactCreate'\nimport update from 'react-addons-update'\n\nclass UserList extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedKey: -1,\n            contactData: [\n                {name: \"0xB08452f93E63c44dCbE25Af479ae8fe42c716F98\", amount: ''},\n            ]\n        }\n        \n        this.handleCreate = this.handleCreate.bind(this);\n        this.handleRemove = this.handleRemove.bind(this);\n    }\n\n    componentWillMount() {\n        const contactData = localStorage.contactData;\n\n        if(contactData) {\n            this.setState({\n                contactData: JSON.parse(contactData)\n            })\n        }\n    }\n\n    componentDidUpdate(prevState) {\n        if(JSON.stringify(prevState.contactData) != JSON.stringify(this.state.contactData)) {\n            localStorage.contactData = JSON.stringify(this.state.contactData);\n            //update된 거 지우고 싶으면 console창에서 localStorage.clear() \n        }\n    }\n\n    handleCreate(contact) {\n        this.setState({\n            contactData: update(this.state.contactData, { $push: [contact]}) \n        })\n    }\n\n    handleRemove() {\n        this.setState({\n            contactData: update(this.state.contactData,\n                { $splice: [[this.state.selectedKey, 1]]}\n                ),\n                selectedKey: -1\n        })\n    }\n\n    render() {\n        const mapToComponents = (data) => {\n            return data.map((contact, i) => {\n                return(<User contact={contact} key={i}/>)\n            })\n        }\n        return(\n            <div className=\"card mb-4\" >\n                <div className=\"card-body\">\n                    <div>\n                        <p className=\"float-left\"><b>User</b></p>\n                    </div>\n                    <div>{mapToComponents(this.state.contactData)}</div>\n                    <ContactCreate\n                        onCreate={this.handleCreate}/>\n                    <div>df</div>\n                </div>\n            </div>\n            \n        );\n    }\n\n}\n\nexport default UserList;"]},"metadata":{},"sourceType":"module"}